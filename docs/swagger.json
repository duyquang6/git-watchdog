{
    "swagger": "2.0",
    "info": {
        "description": "GitWatchdog API Spec",
        "title": "GitWatchdog API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Quang Nguyen",
            "url": "https://duyquang6.github.io",
            "email": "nguyenduyquang06@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/repositories": {
            "post": {
                "description": "create repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "create repository",
                "parameters": [
                    {
                        "description": "CreateRepositoryRequest",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRepositoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            }
        },
        "/repositories/{id}": {
            "get": {
                "description": "get repository by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "get one repo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetOneRepositoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "update repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "update repository",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateRepositoryRequest",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRepositoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRepositoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete repo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "delete repository",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteRepositoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            }
        },
        "/repositories/{id}/scans": {
            "get": {
                "description": "get task scans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "get task scans",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create task scan repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repository"
                ],
                "summary": "create scan task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Repository ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.AppErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateRepositoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CreateRepositoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "meta": {
                    "$ref": "#/definitions/dto.Meta"
                }
            }
        },
        "dto.DeleteRepositoryResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/dto.Meta"
                }
            }
        },
        "dto.GetOneRepositoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Repository"
                },
                "meta": {
                    "$ref": "#/definitions/dto.Meta"
                }
            }
        },
        "dto.IssueScanResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/dto.Meta"
                }
            }
        },
        "dto.Meta": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "dto.Repository": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRepositoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRepositoryResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/dto.Meta"
                }
            }
        },
        "exception.AppErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        }
    }
}